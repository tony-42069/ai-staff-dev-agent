services:
  app:
    build: .
    container_name: ai-staff-dev-agent
    volumes:
      - ./test_reports:/app/test_reports
      - ./private/config/backups:/app/private/config/backups
      - ./backend/data:/app/data  # Persist database
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      - PYTHONFAULTHANDLER=1  # For better error reporting
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Give more time for initial startup
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '2'
          memory: 2G
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  monitoring:
    image: prom/prometheus:latest
    container_name: monitoring
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus  # Persist Prometheus data
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  dashboard:
    image: grafana/grafana:latest
    container_name: dashboard
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana  # Persist Grafana data
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    depends_on:
      monitoring:
        condition: service_started
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

networks:
  default:
    name: ai-staff-dev-network
    driver: bridge

volumes:
  prometheus_data:  # Persist Prometheus data
  grafana_data:    # Persist Grafana data
